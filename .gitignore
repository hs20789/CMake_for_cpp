############################################################
# 0. 공통: 절대 커밋하지 않을 OS/에디터 잡파일
############################################################
# OS
Thumbs.db
Desktop.ini
$RECYCLE.BIN/
ehthumbs.db

# 편집기 백업
*~
*.swp
*.swo

# macOS (혹시 macOS에서도 작업할 경우)
.DS_Store

############################################################
# 1. 빌드 디렉터리 (CMake / Visual Studio / Ninja)
############################################################
# VS CMake 통합 기본 out/ 구조 (질문 사례)
out/
# 혹은 직접 수동 생성한 build 디렉터리들
build/
build-*/
[Bb]uild/

# Visual Studio 솔루션/프로젝트 자동 생성 결과 (만약 생성하는 경우)
*.VC.db
*.VC.VC.opendb

############################################################
# 2. Visual Studio 전용
############################################################
.vs/
*.opensdf
*.sdf
*.suo
*.user
*.userosscache
*.tlog
*.ipch
ipch/
*.pdb
*.obj
*.idb
*.ilk
*.log
*.psess
*.vsp
*.vspx
*.vspscc
*.ncb
*.cachefile

############################################################
# 3. CMake 생성 산출물 / 캐시
############################################################
CMakeFiles/
CMakeCache.txt
cmake_install.cmake
CTestTestfile.cmake
Makefile
compile_commands.json
# 필요하면(예: LSP, clangd) 추적 제외 → 커밋 원하면 주석 처리
CMakeScripts/
Testing/
_install/
# 수동 install prefix 사용했을 경우

# 패키지 찾기 중 다운받은 외부(예: FetchContent)
_fetch/
deps/
externals/
third_party/build*/

############################################################
# 4. 출력 바이너리 / 라이브러리 / 패키징 산출
############################################################
*.exe
*.dll
*.lib
*.exp
*.obj
*.o
*.a
*.so
*.dylib
*.pch
*.pdb
*.rsp
*.manifest

# 링크 타임 캐시 / 프로파일
*.ipdb
*.iobj

# 프로파일러 / 커버리지
*.gcda
*.gcno
*.gcov
*.profraw
*.profdata

############################################################
# 5. IDE / 편집기 (VSCode 등)
############################################################
# VSCode
.vscode/
# JetBrains (CLion 등)
.idea/
cmake-build-*/

############################################################
# 6. 로그 / 임시 / 런타임 생성
############################################################
*.log
logs/
*.tmp
tmp/
temp/
.cache/
cache/
*.pid

############################################################
# 7. 테스트 / 분석 도구 산출물
############################################################
# GoogleTest / Catch2 등에서 생성하는 임시 실행 파일들은 일반적으로 build 폴더에 있으니 이미 out/ 또는 build/ 로 커버됨.
# Sanitizer / coverage 아티팩트 (추가)
*.lsan.*
*.tsan.*
*.asan.*
*.ubsan.*

############################################################
# 8. 패키지 / 아카이브 / 문서 빌드 산출
############################################################
*.zip
*.7z
*.tar
*.tar.gz
dist/
package/
docs/_build/

############################################################
# 9. 잠재적 비밀/환경 파일 (직접 만들 경우)
############################################################
.env
*.env.local
secret/
secrets/
*.key
*.pem

############################################################
# 10. Python 가상환경 / 스크립트(있을 경우)
############################################################
venv/
.env/
.env*/          # conda env 이름 폴더 등 (주의: 실제 필요시 조정)
__pycache__/
*.py[cod]

############################################################
# 11. 기타 (원치 않는 자동 생성)
############################################################
# CMakePresets.json 은 팀 공유 필요 시 커밋 / 개인 로컬만 다르면 ignore
# 주석 해제하여 무시하려면:
# CMakePresets.json
# CMakeUserPresets.json   # 일반적으로 'User' 는 개인 설정 → 무시 권장
CMakeUserPresets.json

# 캐시 성격의 JSON/DB
*.cache.json

# clangd / ccls 인덱스
.clangd/
.clangd-cache/
.ccls-cache/

# 코드 포맷 도구 임시
.clang-format-ignore

############################################################
# 12. (선택) Git 자체 관련
############################################################
# Git LFS 잠시 테스트 중 생성되는 잠재적 파일 패턴 필요시 추가
# *.orig (merge 충돌 잔여)
*.orig
